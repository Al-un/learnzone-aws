# Global CircleCI used version
version: 2.1

# ------------------------------------------------------------------------------
# Workflows
# version is set at 2
# ------------------------------------------------------------------------------
workflows:
  version: 2
  # Staging deployment
  build-deploy:
    jobs:
      - build
      - deploy-dev:
          requires:
            - build
          filters:
            branches:
              only: develop
      - pouet:
          filters:
            branches:
              only: /^feature\/.*/
            steps:
              - run: echo "hello from a /^feature\/.*/ branch"
      - plop:
          filters:
            branches:
              only: /^feature.*/
            steps:
              - run: echo "hello from a /^feature.*/ branch"
      # request approval on Slack
      - before_approval:
          requires:
            - build
          filters:
            branches:
              only: master
      # testing manual approval
      - approval:
          type: approval
          requires:
            - before_approval
      - deploy-prod:
          requires:
            # to require manual approval, just requires "approval" job
            - build
          filters:
            # if manual approval is required, this filtering is not necessary
            branches:
              only: master
            tags:
              only: /^v.*/

# ------------------------------------------------------------------------------
# Executors: list of executing environments (requires version: 2.1)
# https://circleci.com/docs/2.0/configuration-reference/#executors-requires-version-21
# ------------------------------------------------------------------------------
executors:
  app-builder:
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
    working_directory: ~/repo
  aws-deployer:
    docker:
      - image: circleci/python:3.7.2-stretch-node-browsers-legacy

# ------------------------------------------------------------------------------
# Orbs: pre-configuration (requires version: 2.1)
# https://circleci.com/docs/2.0/using-orbs/
# ------------------------------------------------------------------------------
orbs:
  # https://github.com/CircleCI-Public/slack-orb
  slack: circleci/slack@1.0.0

# ------------------------------------------------------------------------------
# Executors: list of re-usable commands (requires version: 2.1)
# https://circleci.com/docs/2.0/configuration-reference/#commands-requires-version-21
# ------------------------------------------------------------------------------
commands:
  deploy-aws-eb:
    description: 'Deploy to AWS Elastic Beanstalk'
    parameters:
      env:
        type: string
    steps:
      - run:
          name: Install EB CLI
          command: sudo pip install awsebcli --upgrade
      - run:
          name: Create AWS credentials manually
          command: |
            mkdir ~/.aws
            touch ~/.aws/config
            chmod 600 ~/.aws/config
            echo "[profile eb-cli]" > ~/.aws/config
            echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/config
            echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/config
      - run:
          name: Deploy to AWS EB (Prod)
          command: eb deploy << parameters.env >> --profile eb-cli --label << parameters.env >>-$CIRCLE_BUILD_NUM

# ------------------------------------------------------------------------------
# Jobs: list of workflow jobs
# ------------------------------------------------------------------------------
jobs:
  # Dependencies installation
  build:
    executor: app-builder
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - learnzone-aws-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - learnzone-aws-dependencies-
      - run:
          name: Install dependencies
          command: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: learnzone-aws-dependencies-{{ checksum "Gemfile.lock" }}

  # Hey! approve!
  before_approval:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - slack/notify:
          message: 'A deploy is on hold for a manual approval: https://circleci.com/workflow-run/$CIRCLE_WORKFLOW_ID'
          mentions: 'Alun'
          color: '#e5bd0b'

  # Deploy to dev
  deploy-dev:
    executor: aws-deployer
    steps:
      - checkout
      - deploy-aws-eb:
          env: learnzone-aws-dev

  # Deploy to prod
  deploy-prod:
    executor: aws-deployer
    steps:
      - checkout
      - deploy-aws-eb:
          env: learnzone-aws
