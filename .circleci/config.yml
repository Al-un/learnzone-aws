workflows:
  version: 2
  # Staging deployment
  build-deploy:
    jobs:
      - build
      - deploy-prod:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-dev:
          requires:
            - build
          filters:
            branches:
              only: develop

version: 2

jobs:
  build:
    docker:
      # specify the version you desire here
      # >> https://hub.docker.com/r/circleci/ruby/
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          RAILS_ENV: test
          # https://circleci.com/docs/2.0/databases/
          DATABASE_TEST_URL: postgresql://root@localhost/circle_test
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.6.5-alpine-ram
    working_directory: ~/repo

    steps:
      - checkout

      # === Dependencies ===
      # Download and cache dependencies
      - restore_cache:
          keys:
            - learnzone-aws-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - learnzone-aws-dependencies-
      - run:
          name: Install dependencies
          command: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: learnzone-aws-dependencies-{{ checksum "Gemfile.lock" }}

  deploy-dev:
    docker:
      - image: python:3.7.2-stretch-node-browsers-legacy
    steps:
      - checkout
      - run:
          name: Install EB CLI
          command: sudo pip install awsebcli --upgrade
      - run:
          name: Create AWS credentials manually
          command: |
            mkdir ~/.aws
            touch ~/.aws/config
            chmod 600 ~/.aws/config
            echo "[profile eb-cli]" > ~/.aws/config
            echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/config
            echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/config
      - run:
          name: Deploy to AWS EB (Dev)
          command: eb deploy learnzone-aws-dev --profile eb-cli

  deploy-prod:
    docker:
      - image: python:3.7.2-stretch-node-browsers-legacy
    steps:
      - checkout
      - run:
          name: Install EB CLI
          command: sudo pip install awsebcli --upgrade
      - run:
          name: Create AWS credentials manually
          command: |
            mkdir ~/.aws
            touch ~/.aws/config
            chmod 600 ~/.aws/config
            echo "[profile eb-cli]" > ~/.aws/config
            echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/config
            echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/config
      - run:
          name: Deploy to AWS EB (Prod)
          command: eb deploy learnzone-aws --profile eb-cli
