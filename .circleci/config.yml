workflows:
  version: 2
  # Staging deployment
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build

version: 2

jobs:

  build:
    docker:
      # specify the version you desire here
      # >> https://hub.docker.com/r/circleci/ruby/
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          RAILS_ENV: test
          # https://circleci.com/docs/2.0/databases/
          DATABASE_TEST_URL: postgresql://root@localhost/circle_test
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/ 
      - image: circleci/postgres:9.6.5-alpine-ram
    working_directory: ~/repo

    steps:
      - checkout

      # === Dependencies ===
      # Download and cache dependencies
      - restore_cache:
          keys:
          - learnzone-aws-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - learnzone-aws-dependencies-
      - run:
          name: Install dependencies
          command: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: learnzone-aws-dependencies-{{ checksum "Gemfile.lock" }}

  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      # - run: 
      #     name: Install EB CLI
      #     command: |
      #       sudo apt-get -y -qq update
      #       sudo apt-get install python-pip python-dev build-essential
      #       sudo pip install awsebcli --upgrade 
      - run: 
          name: Install EB CLI
          command: |
            sudo apt-get -y update
            sudo apt-get -y install python-pip python-dev build-essential
            sudo pip install awsebcli --upgrade 
      - run: ls
      - run: ls .elasticbeanstalk
      - run:
          name: Create AWS credentials manually
          command: |
            mkdir ~/.aws
            touch ~/.aws/config
            chmod 600 ~/.aws/config
            echo "[profile eb-cli]" > ~/.aws/config
            echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/config
            echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/config
      - run: eb list --profile eb-cli
      - run:
          name: Deploy to AWS EB
          command: |
            eb use learnzone-aws --profile eb-cli
            eb deploy learnzone-aws --profile eb-cli