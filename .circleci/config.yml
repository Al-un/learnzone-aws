workflows:
  version: 2
  # Staging deployment
  build-deploy:
    jobs:
      - build
      - deploy-dev:
          requires:
            - manual_lock
            # - build
          filters:
            branches:
              only: develop
      # testing manual approval
      - manual_lock: # <<< A job that will require manual approval in the CircleCI web application.
          type: approval # <<< This key-value pair will set your workflow to a status of "On Hold"
          requires: # We only run the "hold" job when test2 has succeeded
            - build
          # filters:
          #   branches:
          #     only: master
      - deploy-prod:
          requires:
            - manual_lock
          filters:
            branches:
              only: master
  nightly:
    triggers:
      - schedule:
          # https://crontab.guru/
          # Time is UTC
          cron: '31 * * * *'
          filters:
            branches:
              only:
                - develop
    jobs:
      - build

version: 2.1

# Requires 2.1: https://circleci.com/docs/2.0/configuration-reference/#executors-requires-version-21
executors:
  app-builder:
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
      # Examples
      # environment:
      #   RAILS_ENV: test
      #   DATABASE_TEST_URL: postgresql://root@localhost/circle_test
      # If there were a need of a DB for testing
      - image: circleci/postgres:9.6.5-alpine-ram
    working_directory: ~/repo
  aws-deployer:
    docker: 
      - image: circleci/python:3.7.2-stretch-node-browsers-legacy

# Requires 2.1: https://circleci.com/docs/2.0/configuration-reference/#commands-requires-version-21
commands:
  deploy-aws-eb:
    description: 'Deploy to AWS Elastic Beanstalk'
    parameters:
      env:
        type: string
    steps:
      - run:
          name: Install EB CLI
          command: sudo pip install awsebcli --upgrade
      - run:
          name: Create AWS credentials manually
          command: |
            mkdir ~/.aws
            touch ~/.aws/config
            chmod 600 ~/.aws/config
            echo "[profile eb-cli]" > ~/.aws/config
            echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/config
            echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/config
      - run:
          name: Deploy to AWS EB (Prod)
          command: eb deploy << parameters.env >> --profile eb-cli --label << parameters.env >>-$CIRCLE_BUILD_NUM

jobs:
  build:
    executor: app-builder
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - learnzone-aws-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - learnzone-aws-dependencies-
      - run:
          name: Install dependencies
          command: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: learnzone-aws-dependencies-{{ checksum "Gemfile.lock" }}

  deploy-dev:
    executor: aws-deployer
    steps:
      - checkout
      - deploy-aws-eb:
          env: learnzone-aws-dev

  deploy-prod:
    executor: aws-deployer
    steps:
      - checkout
      - deploy-aws-eb:
          env: learnzone-aws
